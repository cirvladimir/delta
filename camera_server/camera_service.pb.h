// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: camera_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_camera_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_camera_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3017000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3017003 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_camera_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_camera_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_camera_5fservice_2eproto;
class CameraDetectionRequest;
struct CameraDetectionRequestDefaultTypeInternal;
extern CameraDetectionRequestDefaultTypeInternal _CameraDetectionRequest_default_instance_;
class CameraDetectionResponse;
struct CameraDetectionResponseDefaultTypeInternal;
extern CameraDetectionResponseDefaultTypeInternal _CameraDetectionResponse_default_instance_;
class DetectedObject;
struct DetectedObjectDefaultTypeInternal;
extern DetectedObjectDefaultTypeInternal _DetectedObject_default_instance_;
PROTOBUF_NAMESPACE_OPEN
template<> ::CameraDetectionRequest* Arena::CreateMaybeMessage<::CameraDetectionRequest>(Arena*);
template<> ::CameraDetectionResponse* Arena::CreateMaybeMessage<::CameraDetectionResponse>(Arena*);
template<> ::DetectedObject* Arena::CreateMaybeMessage<::DetectedObject>(Arena*);
PROTOBUF_NAMESPACE_CLOSE

// ===================================================================

class CameraDetectionRequest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CameraDetectionRequest) */ {
 public:
  inline CameraDetectionRequest() : CameraDetectionRequest(nullptr) {}
  ~CameraDetectionRequest() override;
  explicit constexpr CameraDetectionRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CameraDetectionRequest(const CameraDetectionRequest& from);
  CameraDetectionRequest(CameraDetectionRequest&& from) noexcept
    : CameraDetectionRequest() {
    *this = ::std::move(from);
  }

  inline CameraDetectionRequest& operator=(const CameraDetectionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraDetectionRequest& operator=(CameraDetectionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraDetectionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraDetectionRequest* internal_default_instance() {
    return reinterpret_cast<const CameraDetectionRequest*>(
               &_CameraDetectionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CameraDetectionRequest& a, CameraDetectionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CameraDetectionRequest* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraDetectionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CameraDetectionRequest* New() const final {
    return new CameraDetectionRequest();
  }

  CameraDetectionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CameraDetectionRequest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CameraDetectionRequest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CameraDetectionRequest& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraDetectionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CameraDetectionRequest";
  }
  protected:
  explicit CameraDetectionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CameraDetectionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_camera_5fservice_2eproto;
};
// -------------------------------------------------------------------

class DetectedObject final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DetectedObject) */ {
 public:
  inline DetectedObject() : DetectedObject(nullptr) {}
  ~DetectedObject() override;
  explicit constexpr DetectedObject(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  DetectedObject(const DetectedObject& from);
  DetectedObject(DetectedObject&& from) noexcept
    : DetectedObject() {
    *this = ::std::move(from);
  }

  inline DetectedObject& operator=(const DetectedObject& from) {
    CopyFrom(from);
    return *this;
  }
  inline DetectedObject& operator=(DetectedObject&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DetectedObject& default_instance() {
    return *internal_default_instance();
  }
  static inline const DetectedObject* internal_default_instance() {
    return reinterpret_cast<const DetectedObject*>(
               &_DetectedObject_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DetectedObject& a, DetectedObject& b) {
    a.Swap(&b);
  }
  inline void Swap(DetectedObject* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DetectedObject* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DetectedObject* New() const final {
    return new DetectedObject();
  }

  DetectedObject* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DetectedObject>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const DetectedObject& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const DetectedObject& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DetectedObject* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DetectedObject";
  }
  protected:
  explicit DetectedObject(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kTimeFieldNumber = 3,
    kDxFieldNumber = 4,
    kDyFieldNumber = 5,
    kLengthFieldNumber = 6,
  };
  // float x = 1;
  void clear_x();
  float x() const;
  void set_x(float value);
  private:
  float _internal_x() const;
  void _internal_set_x(float value);
  public:

  // float y = 2;
  void clear_y();
  float y() const;
  void set_y(float value);
  private:
  float _internal_y() const;
  void _internal_set_y(float value);
  public:

  // double time = 3;
  void clear_time();
  double time() const;
  void set_time(double value);
  private:
  double _internal_time() const;
  void _internal_set_time(double value);
  public:

  // float dx = 4;
  void clear_dx();
  float dx() const;
  void set_dx(float value);
  private:
  float _internal_dx() const;
  void _internal_set_dx(float value);
  public:

  // float dy = 5;
  void clear_dy();
  float dy() const;
  void set_dy(float value);
  private:
  float _internal_dy() const;
  void _internal_set_dy(float value);
  public:

  // float length = 6;
  void clear_length();
  float length() const;
  void set_length(float value);
  private:
  float _internal_length() const;
  void _internal_set_length(float value);
  public:

  // @@protoc_insertion_point(class_scope:DetectedObject)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float x_;
  float y_;
  double time_;
  float dx_;
  float dy_;
  float length_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_camera_5fservice_2eproto;
};
// -------------------------------------------------------------------

class CameraDetectionResponse final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CameraDetectionResponse) */ {
 public:
  inline CameraDetectionResponse() : CameraDetectionResponse(nullptr) {}
  ~CameraDetectionResponse() override;
  explicit constexpr CameraDetectionResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  CameraDetectionResponse(const CameraDetectionResponse& from);
  CameraDetectionResponse(CameraDetectionResponse&& from) noexcept
    : CameraDetectionResponse() {
    *this = ::std::move(from);
  }

  inline CameraDetectionResponse& operator=(const CameraDetectionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CameraDetectionResponse& operator=(CameraDetectionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CameraDetectionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CameraDetectionResponse* internal_default_instance() {
    return reinterpret_cast<const CameraDetectionResponse*>(
               &_CameraDetectionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CameraDetectionResponse& a, CameraDetectionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CameraDetectionResponse* other) {
    if (other == this) return;
    if (GetOwningArena() == other->GetOwningArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CameraDetectionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CameraDetectionResponse* New() const final {
    return new CameraDetectionResponse();
  }

  CameraDetectionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CameraDetectionResponse>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const CameraDetectionResponse& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const CameraDetectionResponse& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message*to, const ::PROTOBUF_NAMESPACE_ID::Message&from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CameraDetectionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CameraDetectionResponse";
  }
  protected:
  explicit CameraDetectionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectedObjectsFieldNumber = 1,
  };
  // repeated .DetectedObject detected_objects = 1;
  int detected_objects_size() const;
  private:
  int _internal_detected_objects_size() const;
  public:
  void clear_detected_objects();
  ::DetectedObject* mutable_detected_objects(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DetectedObject >*
      mutable_detected_objects();
  private:
  const ::DetectedObject& _internal_detected_objects(int index) const;
  ::DetectedObject* _internal_add_detected_objects();
  public:
  const ::DetectedObject& detected_objects(int index) const;
  ::DetectedObject* add_detected_objects();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DetectedObject >&
      detected_objects() const;

  // @@protoc_insertion_point(class_scope:CameraDetectionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DetectedObject > detected_objects_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_camera_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CameraDetectionRequest

// -------------------------------------------------------------------

// DetectedObject

// float x = 1;
inline void DetectedObject::clear_x() {
  x_ = 0;
}
inline float DetectedObject::_internal_x() const {
  return x_;
}
inline float DetectedObject::x() const {
  // @@protoc_insertion_point(field_get:DetectedObject.x)
  return _internal_x();
}
inline void DetectedObject::_internal_set_x(float value) {
  
  x_ = value;
}
inline void DetectedObject::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:DetectedObject.x)
}

// float y = 2;
inline void DetectedObject::clear_y() {
  y_ = 0;
}
inline float DetectedObject::_internal_y() const {
  return y_;
}
inline float DetectedObject::y() const {
  // @@protoc_insertion_point(field_get:DetectedObject.y)
  return _internal_y();
}
inline void DetectedObject::_internal_set_y(float value) {
  
  y_ = value;
}
inline void DetectedObject::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:DetectedObject.y)
}

// double time = 3;
inline void DetectedObject::clear_time() {
  time_ = 0;
}
inline double DetectedObject::_internal_time() const {
  return time_;
}
inline double DetectedObject::time() const {
  // @@protoc_insertion_point(field_get:DetectedObject.time)
  return _internal_time();
}
inline void DetectedObject::_internal_set_time(double value) {
  
  time_ = value;
}
inline void DetectedObject::set_time(double value) {
  _internal_set_time(value);
  // @@protoc_insertion_point(field_set:DetectedObject.time)
}

// float dx = 4;
inline void DetectedObject::clear_dx() {
  dx_ = 0;
}
inline float DetectedObject::_internal_dx() const {
  return dx_;
}
inline float DetectedObject::dx() const {
  // @@protoc_insertion_point(field_get:DetectedObject.dx)
  return _internal_dx();
}
inline void DetectedObject::_internal_set_dx(float value) {
  
  dx_ = value;
}
inline void DetectedObject::set_dx(float value) {
  _internal_set_dx(value);
  // @@protoc_insertion_point(field_set:DetectedObject.dx)
}

// float dy = 5;
inline void DetectedObject::clear_dy() {
  dy_ = 0;
}
inline float DetectedObject::_internal_dy() const {
  return dy_;
}
inline float DetectedObject::dy() const {
  // @@protoc_insertion_point(field_get:DetectedObject.dy)
  return _internal_dy();
}
inline void DetectedObject::_internal_set_dy(float value) {
  
  dy_ = value;
}
inline void DetectedObject::set_dy(float value) {
  _internal_set_dy(value);
  // @@protoc_insertion_point(field_set:DetectedObject.dy)
}

// float length = 6;
inline void DetectedObject::clear_length() {
  length_ = 0;
}
inline float DetectedObject::_internal_length() const {
  return length_;
}
inline float DetectedObject::length() const {
  // @@protoc_insertion_point(field_get:DetectedObject.length)
  return _internal_length();
}
inline void DetectedObject::_internal_set_length(float value) {
  
  length_ = value;
}
inline void DetectedObject::set_length(float value) {
  _internal_set_length(value);
  // @@protoc_insertion_point(field_set:DetectedObject.length)
}

// -------------------------------------------------------------------

// CameraDetectionResponse

// repeated .DetectedObject detected_objects = 1;
inline int CameraDetectionResponse::_internal_detected_objects_size() const {
  return detected_objects_.size();
}
inline int CameraDetectionResponse::detected_objects_size() const {
  return _internal_detected_objects_size();
}
inline void CameraDetectionResponse::clear_detected_objects() {
  detected_objects_.Clear();
}
inline ::DetectedObject* CameraDetectionResponse::mutable_detected_objects(int index) {
  // @@protoc_insertion_point(field_mutable:CameraDetectionResponse.detected_objects)
  return detected_objects_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DetectedObject >*
CameraDetectionResponse::mutable_detected_objects() {
  // @@protoc_insertion_point(field_mutable_list:CameraDetectionResponse.detected_objects)
  return &detected_objects_;
}
inline const ::DetectedObject& CameraDetectionResponse::_internal_detected_objects(int index) const {
  return detected_objects_.Get(index);
}
inline const ::DetectedObject& CameraDetectionResponse::detected_objects(int index) const {
  // @@protoc_insertion_point(field_get:CameraDetectionResponse.detected_objects)
  return _internal_detected_objects(index);
}
inline ::DetectedObject* CameraDetectionResponse::_internal_add_detected_objects() {
  return detected_objects_.Add();
}
inline ::DetectedObject* CameraDetectionResponse::add_detected_objects() {
  ::DetectedObject* _add = _internal_add_detected_objects();
  // @@protoc_insertion_point(field_add:CameraDetectionResponse.detected_objects)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::DetectedObject >&
CameraDetectionResponse::detected_objects() const {
  // @@protoc_insertion_point(field_list:CameraDetectionResponse.detected_objects)
  return detected_objects_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_camera_5fservice_2eproto
